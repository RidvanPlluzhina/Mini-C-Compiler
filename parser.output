Terminals unused in grammar

    UMINUS


Grammar

    0 $accept: program $end

    1 program: program stmt
    2        | ε

    3 stmt: decl ';'
    4     | assign ';'
    5     | IF '(' expr ')' stmt
    6     | WHILE '(' expr ')' stmt

    7 $@1: ε

    8 stmt: '{' $@1 stmt_list '}'

    9 stmt_list: stmt stmt_list
   10          | ε

   11 decl: INT_TYPE ID
   12     | FLOAT_TYPE ID

   13 assign: ID '=' expr

   14 expr: expr '+' term
   15     | expr '-' term
   16     | term

   17 term: term '*' factor
   18     | term '/' factor
   19     | factor

   20 factor: NUM
   21       | ID
   22       | '(' expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 5 6 22
    ')' (41) 5 6 22
    '*' (42) 17
    '+' (43) 14
    '-' (45) 15
    '/' (47) 18
    ';' (59) 3 4
    '=' (61) 13
    '{' (123) 8
    '}' (125) 8
    error (256)
    NUM <value> (258) 20
    ID <lexeme> (259) 11 12 13 21
    INT_TYPE (260) 11
    FLOAT_TYPE (261) 12
    IF (262) 5
    WHILE (263) 6
    UMINUS (264)


Nonterminals, with rules where they appear

    $accept (20)
        on left: 0
    program (21)
        on left: 1 2
        on right: 0 1
    stmt (22)
        on left: 3 4 5 6 8
        on right: 1 5 6 9
    $@1 (23)
        on left: 7
        on right: 8
    stmt_list (24)
        on left: 9 10
        on right: 8 9
    decl (25)
        on left: 11 12
        on right: 3
    assign (26)
        on left: 13
        on right: 4
    expr <typed_val> (27)
        on left: 14 15 16
        on right: 5 6 13 14 15 22
    term <typed_val> (28)
        on left: 17 18 19
        on right: 14 15 16 17 18
    factor <typed_val> (29)
        on left: 20 21 22
        on right: 17 18 19


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    1 program: program • stmt

    $end        shift, and go to state 2
    ID          shift, and go to state 3
    INT_TYPE    shift, and go to state 4
    FLOAT_TYPE  shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    '{'         shift, and go to state 8

    stmt    go to state 9
    decl    go to state 10
    assign  go to state 11


State 2

    0 $accept: program $end •

    $default  accept


State 3

   13 assign: ID • '=' expr

    '='  shift, and go to state 12


State 4

   11 decl: INT_TYPE • ID

    ID  shift, and go to state 13


State 5

   12 decl: FLOAT_TYPE • ID

    ID  shift, and go to state 14


State 6

    5 stmt: IF • '(' expr ')' stmt

    '('  shift, and go to state 15


State 7

    6 stmt: WHILE • '(' expr ')' stmt

    '('  shift, and go to state 16


State 8

    8 stmt: '{' • $@1 stmt_list '}'

    $default  reduce using rule 7 ($@1)

    $@1  go to state 17


State 9

    1 program: program stmt •

    $default  reduce using rule 1 (program)


State 10

    3 stmt: decl • ';'

    ';'  shift, and go to state 18


State 11

    4 stmt: assign • ';'

    ';'  shift, and go to state 19


State 12

   13 assign: ID '=' • expr

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr    go to state 23
    term    go to state 24
    factor  go to state 25


State 13

   11 decl: INT_TYPE ID •

    $default  reduce using rule 11 (decl)


State 14

   12 decl: FLOAT_TYPE ID •

    $default  reduce using rule 12 (decl)


State 15

    5 stmt: IF '(' • expr ')' stmt

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr    go to state 26
    term    go to state 24
    factor  go to state 25


State 16

    6 stmt: WHILE '(' • expr ')' stmt

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr    go to state 27
    term    go to state 24
    factor  go to state 25


State 17

    8 stmt: '{' $@1 • stmt_list '}'

    ID          shift, and go to state 3
    INT_TYPE    shift, and go to state 4
    FLOAT_TYPE  shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    '{'         shift, and go to state 8

    $default  reduce using rule 10 (stmt_list)

    stmt       go to state 28
    stmt_list  go to state 29
    decl       go to state 10
    assign     go to state 11


State 18

    3 stmt: decl ';' •

    $default  reduce using rule 3 (stmt)


State 19

    4 stmt: assign ';' •

    $default  reduce using rule 4 (stmt)


State 20

   20 factor: NUM •

    $default  reduce using rule 20 (factor)


State 21

   21 factor: ID •

    $default  reduce using rule 21 (factor)


State 22

   22 factor: '(' • expr ')'

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr    go to state 30
    term    go to state 24
    factor  go to state 25


State 23

   13 assign: ID '=' expr •
   14 expr: expr • '+' term
   15     | expr • '-' term

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32

    $default  reduce using rule 13 (assign)


State 24

   16 expr: term •
   17 term: term • '*' factor
   18     | term • '/' factor

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 16 (expr)


State 25

   19 term: factor •

    $default  reduce using rule 19 (term)


State 26

    5 stmt: IF '(' expr • ')' stmt
   14 expr: expr • '+' term
   15     | expr • '-' term

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    ')'  shift, and go to state 35


State 27

    6 stmt: WHILE '(' expr • ')' stmt
   14 expr: expr • '+' term
   15     | expr • '-' term

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    ')'  shift, and go to state 36


State 28

    9 stmt_list: stmt • stmt_list

    ID          shift, and go to state 3
    INT_TYPE    shift, and go to state 4
    FLOAT_TYPE  shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    '{'         shift, and go to state 8

    $default  reduce using rule 10 (stmt_list)

    stmt       go to state 28
    stmt_list  go to state 37
    decl       go to state 10
    assign     go to state 11


State 29

    8 stmt: '{' $@1 stmt_list • '}'

    '}'  shift, and go to state 38


State 30

   14 expr: expr • '+' term
   15     | expr • '-' term
   22 factor: '(' expr • ')'

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    ')'  shift, and go to state 39


State 31

   14 expr: expr '+' • term

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    term    go to state 40
    factor  go to state 25


State 32

   15 expr: expr '-' • term

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    term    go to state 41
    factor  go to state 25


State 33

   17 term: term '*' • factor

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    factor  go to state 42


State 34

   18 term: term '/' • factor

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    factor  go to state 43


State 35

    5 stmt: IF '(' expr ')' • stmt

    ID          shift, and go to state 3
    INT_TYPE    shift, and go to state 4
    FLOAT_TYPE  shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    '{'         shift, and go to state 8

    stmt    go to state 44
    decl    go to state 10
    assign  go to state 11


State 36

    6 stmt: WHILE '(' expr ')' • stmt

    ID          shift, and go to state 3
    INT_TYPE    shift, and go to state 4
    FLOAT_TYPE  shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    '{'         shift, and go to state 8

    stmt    go to state 45
    decl    go to state 10
    assign  go to state 11


State 37

    9 stmt_list: stmt stmt_list •

    $default  reduce using rule 9 (stmt_list)


State 38

    8 stmt: '{' $@1 stmt_list '}' •

    $default  reduce using rule 8 (stmt)


State 39

   22 factor: '(' expr ')' •

    $default  reduce using rule 22 (factor)


State 40

   14 expr: expr '+' term •
   17 term: term • '*' factor
   18     | term • '/' factor

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 14 (expr)


State 41

   15 expr: expr '-' term •
   17 term: term • '*' factor
   18     | term • '/' factor

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 15 (expr)


State 42

   17 term: term '*' factor •

    $default  reduce using rule 17 (term)


State 43

   18 term: term '/' factor •

    $default  reduce using rule 18 (term)


State 44

    5 stmt: IF '(' expr ')' stmt •

    $default  reduce using rule 5 (stmt)


State 45

    6 stmt: WHILE '(' expr ')' stmt •

    $default  reduce using rule 6 (stmt)
